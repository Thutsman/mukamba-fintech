import type { Metadata } from "next";
import { Geist, Geist_Mono, Inter } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                try {
                  var stored = localStorage.getItem('theme');
                  var prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                  var shouldDark = stored ? stored === 'dark' : prefersDark;
                  if (shouldDark) document.documentElement.classList.add('dark');
                  else document.documentElement.classList.remove('dark');
                  // Listen for changes to OS setting
                  try {
                    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e){
                      if (!localStorage.getItem('theme')) {
                        if (e.matches) document.documentElement.classList.add('dark');
                        else document.documentElement.classList.remove('dark');
                      }
                    });
                  } catch (_) {}
                } catch (e) {}
              })();
            `,
          }}
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}
